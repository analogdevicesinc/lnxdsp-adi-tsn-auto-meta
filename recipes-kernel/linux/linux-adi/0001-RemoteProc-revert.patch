diff --git a/arch/arm/boot/dts/sc594-som-ezkit.dts b/arch/arm/boot/dts/sc594-som-ezkit.dts
index e6e4ee949c68..92df97e3bbea 100644
--- a/arch/arm/boot/dts/sc594-som-ezkit.dts
+++ b/arch/arm/boot/dts/sc594-som-ezkit.dts
@@ -79,7 +79,6 @@
 			core-id = <1>;
 			core-irq = <74>; /* was 77 */
 			firmware-name = "adi_adsp_core1_fw.ldr";
-			interrupts = <GIC_SPI 165 IRQ_TYPE_EDGE_RISING>;
 		};
 
 		core2-rproc@0x3108c000 {
@@ -88,7 +87,6 @@
 			core-id = <2>;
 			core-irq = <75>; /* was 78 */
 			firmware-name = "adi_adsp_core2_fw.ldr";
-			interrupts = <GIC_SPI 165 IRQ_TYPE_EDGE_RISING>;
 		};
 
 		sound {
diff --git a/drivers/remoteproc/adi_remoteproc.c b/drivers/remoteproc/adi_remoteproc.c
index 3a052f7b789b..ec7641f9d2bb 100644
--- a/drivers/remoteproc/adi_remoteproc.c
+++ b/drivers/remoteproc/adi_remoteproc.c
@@ -16,7 +16,6 @@
 #include <linux/clk.h>
 #include <linux/firmware.h>
 #include <linux/elf.h>
-#include <linux/virtio_ids.h>
 #include <linux/interrupt.h>
 #include <linux/module.h>
 #include <linux/of_address.h>
@@ -56,8 +55,6 @@
 #define VALID_CORE_MIN			1
 #define VALID_CORE_MAX			2
 
-#define CORE_INIT_TIMEOUT msecs_to_jiffies(2000)
-
 #if defined(VERIFY_LDR_DATA)
 #define MEMORY_COUNT 2
 #else
@@ -67,75 +64,12 @@
 #define ADI_FW_LDR 0
 #define ADI_FW_ELF 1
 
-#define NUM_TABLE_ENTRIES         1
-/* Resource table for the given remote */
-struct adi_sharc_resource_table {
-	struct resource_table table_hdr;
-	unsigned int offset[NUM_TABLE_ENTRIES];
-	struct fw_rsc_hdr rsc_hdr;
-	struct fw_rsc_vdev rpmsg_vdev;
-	struct fw_rsc_vdev_vring vring[2];
-} __packed;
-
-#define VRING_ALIGN 0x1000
-#define VRING_SIZE 0x8000
-
-static struct adi_sharc_resource_table resources_sharc0 = {
-	.table_hdr = {
-		/* resource table header */
-		1, 								 /* version */
-		NUM_TABLE_ENTRIES, /* number of table entries */
-		{0, 0,},					 /* reserved fields */
-	},
-	.offset = {offsetof(struct adi_sharc_resource_table, rsc_hdr),},
-	/* virtio device entry */
-	.rsc_hdr = {RSC_VDEV,}, /* virtio dev type */
-	.rpmsg_vdev = {
-		VIRTIO_ID_RPMSG, /* it's rpmsg virtio */
-		1, /* kick sharc0 */
-		/* 1<<0 is VIRTIO_RPMSG_F_NS bit defined in virtio_rpmsg_bus.c */
-		1<<0, 0, 0, 0, /* dfeatures, gfeatures, config len, status */
-		2, /* num_of_vrings */
-		{0, 0,}, /* reserved */
-	},
-	.vring = {
-		{FW_RSC_ADDR_ANY, VRING_ALIGN, VRING_SIZE, 1, 0}, /* da allocated by remoteproc driver */
-		{FW_RSC_ADDR_ANY, VRING_ALIGN, VRING_SIZE, 1, 0}, /* da allocated by remoteproc driver */
-	},
-};
-
-static struct adi_sharc_resource_table resources_sharc1 = {
-	.table_hdr = {
-		/* resource table header */
-		1, 								 /* version */
-		NUM_TABLE_ENTRIES, /* number of table entries */
-		{0, 0,},					 /* reserved fields */
-	},
-	.offset = {offsetof(struct adi_sharc_resource_table, rsc_hdr),},
-	/* virtio device entry */
-	.rsc_hdr = {RSC_VDEV,}, /* virtio dev type */
-	.rpmsg_vdev = {
-		VIRTIO_ID_RPMSG, /* it's rpmsg virtio */
-		2, /* kick sharc0 */
-		/* 1<<0 is VIRTIO_RPMSG_F_NS bit defined in virtio_rpmsg_bus.c */
-		1<<0, 0, 0, 0, /* dfeatures, gfeatures, config len, status */
-		2, /* num_of_vrings */
-		{0, 0,}, /* reserved */
-	},
-	.vring = {
-		{FW_RSC_ADDR_ANY, VRING_ALIGN, VRING_SIZE, 2, 0}, /* da allocated by remoteproc driver */
-		{FW_RSC_ADDR_ANY, VRING_ALIGN, VRING_SIZE, 2, 0}, /* da allocated by remoteproc driver */
-	},
-};
-
 struct adi_rproc_data {
 	struct device *dev;
 	struct rproc *rproc;
 	const char *firmware_name;
 	int core_id;
 	int core_irq;
-	int icc_irq;
-	int icc_irq_type;
 	void *mem_virt;
 	dma_addr_t mem_handle;
 	size_t fw_size;
@@ -144,10 +78,6 @@ struct adi_rproc_data {
 	int firmware_format;
 	void __iomem *L1_shared_base;
 	void __iomem *L2_shared_base;
-	struct completion sharc_platform_init_complete;
-	struct workqueue_struct *core_workqueue;
-	int wait_platform_init;
-	struct delayed_work core_kick_work;
 };
 
 typedef struct block_code_flag {
@@ -194,26 +124,13 @@ static int adi_core_set_svect(struct adi_rproc_data *rproc_data,
 	return 0;
 }
 
-static irqreturn_t sharc_virtio_irq_threded_handler(int irq, void *p);
 /* Active SHARC core */
 static int adi_core_start(struct adi_rproc_data *rproc_data)
 {
-	int ret;
 	int coreid = rproc_data->core_id;
 
 	struct rcu_reg __iomem *rcu_base = rproc_data->rcu_base;
 
-	rproc_data->wait_platform_init = 1;
-
-	ret = devm_request_threaded_irq(rproc_data->dev,
-			rproc_data->icc_irq, NULL, sharc_virtio_irq_threded_handler,
-			rproc_data->icc_irq_type | IRQF_ONESHOT,
-			"ICC virtio IRQ", rproc_data);
-	if (ret) {
-		dev_err(rproc_data->dev, "Fail to request ICC receive IRQ\n");
-		return -ENOENT;
-	}
-
 	if ((coreid < VALID_CORE_MIN) || (coreid > VALID_CORE_MAX)) {
 		printk(" %s: invalid Core ID:%d\n", __func__, coreid);
 		return -EINVAL;
@@ -281,13 +198,9 @@ static int adi_core_stop(struct adi_rproc_data *rproc_data)
 	int coreid = rproc_data->core_id;
 	int coreirq = rproc_data->core_irq;
 	struct rcu_reg __iomem *rcu_base = rproc_data->rcu_base;
-	unsigned long timeout = jiffies + CORE_INIT_TIMEOUT;
+	unsigned long timeout = jiffies + HZ*5;
 	bool is_timeout = true;
 
-	cancel_delayed_work_sync(&rproc_data->core_kick_work);
-
-	devm_free_irq(rproc_data->dev, rproc_data->icc_irq, rproc_data);
-
 	if ((coreid < VALID_CORE_MIN) || (coreid > VALID_CORE_MAX)) {
 		printk(" %s: invalid Core ID:%d\n", __func__, coreid);
 		return -EINVAL;
@@ -557,30 +470,6 @@ static int adi_rproc_stop(struct rproc *rproc)
 	return ret;
 }
 
-static int adi_ldr_load_rsc_table(struct rproc *rproc, const struct firmware *fw){
-	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
-	struct resource_table *table = NULL;
-	size_t size;
-
-	if(rproc_data->core_id == 1){
-		table = (struct resource_table *)(&resources_sharc0);
-		size = sizeof(resources_sharc0);
-	}else{
-		table = (struct resource_table *)(&resources_sharc1);
-		size = sizeof(resources_sharc1);
-	}
-
-	rproc->cached_table = kmemdup(table, size, GFP_KERNEL);
-	if (!rproc->cached_table){
-		return -ENOMEM;
-	}
-
-	rproc->table_ptr = rproc->cached_table;
-	rproc->table_sz = size;
-
-	return 0;
-}
-
 static int adi_rproc_load_rsc_table(struct rproc *rproc, const struct firmware *fw)
 {
 	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
@@ -588,7 +477,7 @@ static int adi_rproc_load_rsc_table(struct rproc *rproc, const struct firmware *
 
 	switch (rproc_data->firmware_format){
 		case ADI_FW_LDR:
-			ret = adi_ldr_load_rsc_table(rproc, fw);
+			ret = 0;
 			break;
 		case ADI_FW_ELF:
 			ret = rproc_elf_load_rsc_table(rproc, fw);
@@ -600,16 +489,6 @@ static int adi_rproc_load_rsc_table(struct rproc *rproc, const struct firmware *
 	return ret;
 }
 
-static struct resource_table *adi_ldr_find_loaded_rsc_table(struct rproc *rproc, const struct firmware *fw){
-	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
-
-	if(rproc_data->core_id == 1){
-		return rproc_da_to_va(rproc, 0x20001000, sizeof(resources_sharc0)); //FIXME fix address range for other platfoms
-	}else{
-		return rproc_da_to_va(rproc, 0x20001000 + sizeof(resources_sharc0), sizeof(resources_sharc0)); //FIXME fix address range for other platfoms
-	}
-}
-
 static struct resource_table *adi_rproc_find_loaded_rsc_table(struct rproc *rproc, const struct firmware *fw)
 {
 	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
@@ -617,7 +496,6 @@ static struct resource_table *adi_rproc_find_loaded_rsc_table(struct rproc *rpro
 
 	switch (rproc_data->firmware_format){
 		case ADI_FW_LDR:
-			ret = adi_ldr_find_loaded_rsc_table(rproc, fw);
 			break;
 		case ADI_FW_ELF:
 			ret = rproc_elf_find_loaded_rsc_table(rproc, fw);
@@ -629,53 +507,6 @@ static struct resource_table *adi_rproc_find_loaded_rsc_table(struct rproc *rpro
 	return ret;
 }
 
-static irqreturn_t sharc_virtio_irq_threded_handler(int irq, void *p){
-	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)p;
-	struct adi_sharc_resource_table *table = (struct adi_sharc_resource_table *)adi_ldr_find_loaded_rsc_table(rproc_data->rproc, NULL);
-
-	/* Process incoming buffers on all our vrings */
-	if(rproc_data->wait_platform_init){
-		complete(&rproc_data->sharc_platform_init_complete);
-	}
-
-	rproc_vq_interrupt(rproc_data->rproc, table->vring[0].notifyid);
-	rproc_vq_interrupt(rproc_data->rproc, table->vring[1].notifyid);
-
-	return IRQ_HANDLED;
-}
-
-/* kick a virtqueue */
-static void adi_rproc_kick(struct rproc *rproc, int vqid)
-{
-	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
-	int ret;
-
-	while(rproc_data->wait_platform_init){
-		ret = wait_for_completion_interruptible_timeout(&rproc_data->sharc_platform_init_complete, CORE_INIT_TIMEOUT);
-		if(ret > 0){
-			rproc_data->wait_platform_init = 0;
-		}else if(ret < 0){
-			if (ret != -ERESTARTSYS){
-				dev_err(rproc_data->dev, "Core%d init error %d\n", rproc_data->core_id, ret);
-			}
-		}else{
-			dev_warn(rproc_data->dev, "Core%d init timeout\n", rproc_data->core_id);
-			// Delay the kick until core is initialized
-			queue_delayed_work(rproc_data->core_workqueue, &rproc_data->core_kick_work, CORE_INIT_TIMEOUT);
-			return;
-		}
-	}
-
-	platform_send_ipi_cpu(rproc_data->core_id, 0);
-}
-
-static void adi_rproc_kick_work(struct work_struct *work){
-	struct delayed_work *dw = to_delayed_work(work);
-	struct adi_rproc_data *rproc_data = container_of(dw, struct adi_rproc_data, core_kick_work);
-
-	adi_rproc_kick(rproc_data->rproc, 0);
-}
-
 static int adi_rproc_sanity_check(struct rproc *rproc, const struct firmware *fw)
 {
 	struct adi_rproc_data *rproc_data = (struct adi_rproc_data *)rproc->priv;
@@ -733,13 +564,9 @@ static void *adi_da_to_va(struct rproc *rproc, u64 da, int len)
 static const struct rproc_ops adi_rproc_ops = {
 	.start = adi_rproc_start,
 	.stop = adi_rproc_stop,
-	.kick		= adi_rproc_kick,
 	.load = adi_rproc_load,
 	.da_to_va = adi_da_to_va,
-	.parse_fw = adi_rproc_load_rsc_table,
-	.find_loaded_rsc_table = adi_rproc_find_loaded_rsc_table,
 	.sanity_check = adi_rproc_sanity_check,
-	.get_boot_addr = adi_rproc_get_boot_addr,
 };
 
 static int adi_remoteproc_probe(struct platform_device *pdev)
@@ -769,15 +596,6 @@ static int adi_remoteproc_probe(struct platform_device *pdev)
 	rproc_data = (struct adi_rproc_data *)rproc->priv;
 	platform_set_drvdata(pdev, rproc);
 
-	rproc_data->core_workqueue = alloc_workqueue("Core workqueue", WQ_UNBOUND | WQ_MEM_RECLAIM, 1);
-	if (rproc_data->core_workqueue == NULL){
-		dev_err(dev, "Unable to allocate core workqueue\n");
-		goto free_rproc;
-	}
-
-	init_completion(&rproc_data->sharc_platform_init_complete);
-	INIT_DELAYED_WORK(&rproc_data->core_kick_work, adi_rproc_kick_work);
-
 	ret = of_property_read_u32(np, "core-id",
 					&rproc_data->core_id);
 	if (ret) {
@@ -792,14 +610,6 @@ static int adi_remoteproc_probe(struct platform_device *pdev)
 		goto free_rproc;
 	}
 
-	rproc_data->icc_irq = platform_get_irq(pdev, 0);
-	if (rproc_data->icc_irq <= 0) {
-		dev_err(dev, "No ICC IRQ specified\n");
-		return -ENOENT;
-	}
-	res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
-	rproc_data->icc_irq_type = (res->flags & IORESOURCE_BITS) | IRQF_PERCPU;
-
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (res == NULL) {
 		dev_err(dev, "Cannot get IORESOURCE_MEM\n");
